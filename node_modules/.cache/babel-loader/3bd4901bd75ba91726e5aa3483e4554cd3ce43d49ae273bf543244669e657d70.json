{"ast":null,"code":"var _jsxFileName = \"/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addToContacts\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n\n  // Check for duplicate names when contacts or name change\n  useEffect(() => {\n    if (contacts.some(contact => contact.name === name)) {\n      setDuplicate(true);\n    }\n  }, [contacts, name]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!duplicate) {\n      // Add contact info and clear data\n      addToContacts(name, phone, email);\n      setName(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Add Contact\", duplicate ? \"Name already added\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        phone: phone,\n        email: email,\n        setName: setName,\n        setPhone: setPhone,\n        setEmail: setEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"vNkYol+xC/T7uxd5kzXSdoj6AbM=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","addToContacts","name","setName","phone","setPhone","email","setEmail","duplicate","setDuplicate","some","contact","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\n\r\nexport const ContactsPage = ({ contacts, addToContacts }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n  \r\n\r\n  // Check for duplicate names when contacts or name change\r\n  useEffect(() => {\r\n    if (contacts.some(contact => contact.name === name)){\r\n    setDuplicate(true);\r\n    }\r\n  }, [contacts, name]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!duplicate) {\r\n      // Add contact info and clear data\r\n      addToContacts(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          { duplicate ? \"Name already added\" : \"\" }\r\n      </h2> \r\n        <ContactForm name={name} phone={phone} email={email} setName={setName} setPhone={setPhone} setEmail={setEmail} handleSubmit={handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9D,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACtD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAGjD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACU,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACT,IAAI,KAAKA,IAAI,CAAC,EAAC;MACpDO,YAAY,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEE,IAAI,CAAC,CAAC;EAEpB,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI,CAACN,SAAS,EAAE;MACd;MACAP,aAAa,CAACC,IAAI,EAAEE,KAAK,EAAEE,KAAK,CAAC;MACjCH,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEX,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,GAAI,aAEF,EAAEP,SAAS,GAAG,oBAAoB,GAAG,EAAE;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtC,eACHvB,OAAA,CAACH,WAAW;QAACS,IAAI,EAAEA,IAAK;QAACE,KAAK,EAAEA,KAAM;QAACE,KAAK,EAAEA,KAAM;QAACH,OAAO,EAAEA,OAAQ;QAACE,QAAQ,EAAEA,QAAS;QAACE,QAAQ,EAAEA,QAAS;QAACK,YAAY,EAAEA;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrI,eACVvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNvB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACpB,EAAA,CAzCWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}