{"ast":null,"code":"var _jsxFileName = \"/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [appointments, setAppointments] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addToAppointments = props => {\n    const newAppointment = {\n      name: props.name,\n      contact: props.contact,\n      date: props.date,\n      time: props.time\n    };\n    setAppointments(...appointments, newAppointment);\n  };\n  const addToContacts = props => {\n    const newContact = {\n      name: props.name,\n      phone: props.phone,\n      email: props.email\n    };\n    setContacts(...contacts, newContact);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contact: contacts,\n        addToContacts: addToContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointments: appointments,\n        addToAppointments: addToAppointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fwayFhv9NcdGZgbII3rXNLT5q1Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","useState","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","contacts","setContacts","addToAppointments","props","newAppointment","name","contact","date","time","addToContacts","newContact","phone","email","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addToAppointments = (props) => {\r\n    const newAppointment = {\r\n      name: props.name,\r\n      contact: props.contact,\r\n      date: props.date,\r\n      time: props.time\r\n    }\r\n    setAppointments(...appointments, newAppointment);\r\n  }\r\n\r\n  const addToContacts = (props) => {\r\n    const newContact = {\r\n      name: props.name,\r\n      phone: props.phone,\r\n      email: props.email\r\n    }\r\n    setContacts(...contacts, newContact);\r\n  }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage  contact={contacts} addToContacts={addToContacts} /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage appointments={appointments} addToAppointments={addToAppointments} /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}