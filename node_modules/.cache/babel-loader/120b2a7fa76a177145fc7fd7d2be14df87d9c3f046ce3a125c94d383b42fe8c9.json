{"ast":null,"code":"var _jsxFileName = \"/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  _s();\n  let {\n    name,\n    contacts,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  const contactNames = useMemo(() => {\n    return contacts.map(contact => contact.name);\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        name: \"name\",\n        placeholder: \"Appointment Name\",\n        required: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        value: contact,\n        contacts: contactNames,\n        name: \"contact\",\n        onChange: e => setContact(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        name: \"date\",\n        placeholder: \"Appointment Date\",\n        required: true,\n        onChange: e => setDate(e.target.value),\n        min: getTodayString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        name: \"time\",\n        placeholder: \"Appointment Time\",\n        required: true,\n        onChange: e => setTime(e.target.value),\n        min: getTodayString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"9tur8ZuM/Pgiy8Lm5dK4dfxE0e4=\");\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useMemo","ContactPicker","jsxDEV","_jsxDEV","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","_s","name","contacts","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","contactNames","map","children","onSubmit","type","value","placeholder","required","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","min","_c","$RefreshReg$"],"sources":["/Users/louissimpson/Downloads/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  name,\r\n  contacts,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const contactNames = useMemo(() => {\r\n    return contacts.map((contact) => contact.name);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n        type=\"text\" \r\n        value={name} \r\n        name=\"name\"  \r\n        placeholder=\"Appointment Name\"\r\n        required\r\n        onChange={(e) => setTitle(e.target.value)}\r\n         />\r\n        <br />\r\n        <ContactPicker value={contact} contacts={contactNames} name=\"contact\" onChange={(e) => setContact(e.target.value)} />\r\n        <br />\r\n        <input \r\n        type=\"date\" \r\n        value={date} \r\n        name=\"date\" \r\n        placeholder=\"Appointment Date\"\r\n        required\r\n        onChange={(e) => setDate(e.target.value)}\r\n        min={getTodayString()}\r\n       \r\n         />\r\n        <br />\r\n        <input \r\n        type=\"time\" \r\n        value={time} \r\n        name=\"time\" \r\n        placeholder=\"Appointment Time\"\r\n        required\r\n        onChange={(e) => setTime(e.target.value)}\r\n        min={getTodayString()}\r\n        \r\n         />\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}